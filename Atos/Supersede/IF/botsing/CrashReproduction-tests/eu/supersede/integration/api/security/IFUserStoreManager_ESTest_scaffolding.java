/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Nov 19 14:37:54 CET 2018
 */

package eu.supersede.integration.api.security;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class IFUserStoreManager_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "eu.supersede.integration.api.security.IFUserStoreManager"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IFUserStoreManager_ESTest_scaffolding.class.getClassLoader() ,
      "com.google.common.primitives.Longs$LongConverter",
      "org.apache.axiom.om.impl.builder.XOPAwareStAXOMBuilder",
      "org.wso2.carbon.um.ws.api.stub.UpdateRoleName",
      "org.apache.commons.ssl.SSLWrapperFactory$2",
      "org.apache.commons.ssl.SSLWrapperFactory$1",
      "com.ctc.wstx.sr.CompactNsContext",
      "org.wso2.carbon.um.ws.api.stub.GetUserClaimValues",
      "org.apache.axis2.description.java2wsdl.Java2WSDLConstants",
      "com.ctc.wstx.io.WstxInputData",
      "org.wso2.carbon.user.core.Permission",
      "org.wso2.carbon.user.core.claim.ClaimMapping",
      "org.apache.axis2.client.Options",
      "org.wso2.carbon.um.ws.api.stub.UpdateCredentialByAdmin",
      "org.apache.axiom.util.stax.wrapper.XMLOutputFactoryWrapper",
      "org.apache.axiom.util.stax.wrapper.ImmutableXMLInputFactory",
      "org.wso2.carbon.context.internal.CarbonContextDataHolder$1",
      "org.apache.commons.ssl.SSL",
      "org.apache.axis2.dataretrieval.LocatorType",
      "com.ctc.wstx.io.AsciiReader",
      "org.apache.commons.ssl.HttpSecureProtocol",
      "com.google.common.hash.BloomFilter$Strategy",
      "org.apache.axiom.om.impl.llom.factory.OMLinkedListImplFactory",
      "org.apache.axiom.om.util.StAXUtils",
      "org.apache.axiom.om.OMAttachmentAccessor",
      "com.ctc.wstx.exc.WstxParsingException",
      "org.apache.axiom.util.stax.dialect.StAXDialectDetector",
      "com.google.common.base.Enums$StringConverter",
      "com.google.common.base.Predicates$ContainsPatternPredicate",
      "com.ctc.wstx.util.SymbolTable$Bucket",
      "com.ctc.wstx.io.BaseReader",
      "org.apache.axis2.java.security.AccessController",
      "org.wso2.carbon.user.api.AuthorizationManager",
      "org.apache.commons.ssl.asn1.ASN1Sequence",
      "org.apache.axis2.context.ServiceContext",
      "com.ctc.wstx.util.ArgUtil",
      "org.apache.commons.ssl.TrustChain",
      "org.apache.commons.ssl.asn1.ASN1EncodableVector",
      "com.google.common.cache.LocalCache$LocalManualCache",
      "org.apache.commons.ssl.JavaImpl",
      "com.ctc.wstx.util.SymbolTable",
      "com.ctc.wstx.sr.InputProblemReporter",
      "org.wso2.carbon.um.ws.api.stub.GetRoleListOfUserResponse",
      "com.google.common.base.CharMatcher$Invisible",
      "com.google.common.base.CharMatcher$None",
      "org.apache.axis2.description.AxisServiceGroup",
      "org.apache.axis2.AxisFault",
      "com.google.common.hash.BloomFilterStrategies$BitArray",
      "org.apache.commons.ssl.asn1.DERUTCTime",
      "org.apache.axiom.soap.SOAPFaultClassifier",
      "org.wso2.carbon.um.ws.api.stub.GetUserId",
      "org.apache.axis2.context.ConfigurationContext",
      "com.ctc.wstx.io.CharArraySource",
      "org.wso2.carbon.context.internal.CarbonContextDataHolder$CarbonAuthenticator",
      "org.apache.ws.commons.schema.utils.NamespacePrefixList",
      "org.apache.axis2.engine.AxisConfigurator",
      "com.ctc.wstx.compat.Jdk12Impl",
      "org.wso2.carbon.user.core.claim.DefaultClaimManager",
      "org.wso2.carbon.um.ws.api.stub.ListUsers",
      "com.google.common.collect.DiscreteDomain",
      "org.apache.axis2.deployment.AxisConfigBuilder",
      "org.wso2.carbon.um.ws.api.stub.RemoteUserStoreManagerService",
      "org.apache.axis2.description.AxisDescription",
      "com.google.common.collect.Cut",
      "org.apache.axiom.soap.SOAPModelBuilder",
      "com.ctc.wstx.util.DefaultXmlSymbolTable",
      "org.apache.axiom.soap.SOAPFaultValue",
      "com.google.common.base.Functions$ConstantFunction",
      "com.google.common.primitives.Shorts$ShortConverter",
      "com.google.common.collect.FilteredEntryMultimap$Keys",
      "com.google.common.io.Files$FilePredicate",
      "org.apache.commons.ssl.KeyStoreBuilder",
      "org.apache.axiom.om.OMDocType",
      "org.apache.axiom.util.base64.Base64DecodingOutputStreamWriter",
      "org.apache.commons.ssl.asn1.DEROutputStream",
      "com.google.common.cache.ForwardingCache",
      "org.apache.axiom.om.OMConstants",
      "com.ctc.wstx.util.StringVector",
      "org.apache.commons.ssl.asn1.ASN1Object",
      "org.wso2.carbon.user.core.system.SystemUserRoleManager",
      "org.apache.commons.httpclient.protocol.Protocol",
      "org.apache.commons.ssl.Certificates$1",
      "com.google.common.base.CharMatcher$1",
      "org.wso2.carbon.user.core.profile.builder.ProfileBuilderException",
      "org.apache.axis2.context.externalize.SafeSerializable",
      "org.apache.axis2.description.OutOnlyAxisOperationClient",
      "org.wso2.carbon.um.ws.api.stub.GetHybridRolesResponse",
      "org.wso2.carbon.um.ws.api.stub.GetPasswordExpirationTime",
      "com.google.common.base.CharMatcher$FastMatcher",
      "com.google.common.hash.Funnels$StringCharsetFunnel",
      "org.apache.commons.ssl.KeyStoreBuilder$BuildResult",
      "org.codehaus.stax2.XMLEventReader2",
      "com.google.common.base.Converter$ConverterComposition",
      "org.wso2.carbon.user.core.claim.builder.ClaimBuilderException",
      "com.google.common.base.Predicates$IsEqualToPredicate",
      "org.apache.axiom.om.impl.builder.BuilderAwareReader",
      "com.google.common.cache.LocalCache$ManualSerializationProxy",
      "org.apache.axiom.util.stax.wrapper.XMLStreamReaderWrapper",
      "org.apache.commons.ssl.asn1.DERNull",
      "org.apache.axiom.util.base64.AbstractBase64DecodingWriter",
      "org.wso2.carbon.um.ws.api.stub.UpdateUserListOfRole",
      "org.apache.commons.ssl.asn1.DEREncodableVector",
      "com.google.common.hash.BloomFilterStrategies",
      "org.codehaus.stax2.validation.ValidatorPair",
      "org.apache.axis2.phaseresolver.PhaseException",
      "org.apache.axiom.om.OMNamespace",
      "org.apache.axis2.client.Stub",
      "com.google.common.base.CharMatcher$BitSetMatcher",
      "com.ctc.wstx.exc.WstxIOException",
      "org.apache.axis2.deployment.DeploymentEngine",
      "com.ctc.wstx.io.WstxInputLocation",
      "com.google.common.base.CharMatcher$JavaUpperCase",
      "org.wso2.carbon.um.ws.api.stub.ArrayOfString",
      "org.apache.axis2.deployment.DeploymentException",
      "org.apache.axiom.util.stax.XMLStreamReaderUtils",
      "org.wso2.carbon.user.core.AuthorizationManager",
      "com.google.common.collect.DiscreteDomain$IntegerDomain",
      "org.apache.commons.ssl.Certificates",
      "org.wso2.carbon.user.core.jdbc.JDBCUserStoreManager$RoleBreakdown",
      "com.google.common.hash.Funnels$ByteArrayFunnel",
      "org.apache.axis2.engine.Phase",
      "com.google.common.base.CharMatcher$NamedFastMatcher",
      "org.wso2.carbon.um.ws.api.stub.IsExistingRoleResponse",
      "org.apache.axis2.deployment.Deployer",
      "com.google.common.collect.DiscreteDomain$LongDomain",
      "com.google.common.base.Converter$ReverseConverter",
      "com.google.common.base.Functions$ToStringFunction",
      "com.google.common.base.Functions$FunctionComposition",
      "org.wso2.carbon.um.ws.api.stub.GetProfileNamesResponse",
      "com.google.common.base.CharMatcher$Is",
      "org.apache.axiom.om.OMAbstractFactory",
      "org.wso2.carbon.um.ws.api.stub.IsExistingUser",
      "org.wso2.carbon.user.core.claim.ClaimInvalidationCache",
      "org.apache.axiom.om.OMAttribute",
      "com.ctc.wstx.api.WstxInputProperties",
      "org.wso2.carbon.um.ws.api.stub.GetUserIdResponse",
      "org.apache.commons.ssl.asn1.ASN1OutputStream",
      "org.apache.axis2.description.java2wsdl.DocLitBareSchemaGenerator",
      "org.apache.axis2.deployment.DescriptionBuilder",
      "org.apache.axiom.om.impl.traverse.OMChildrenQNameIterator",
      "org.wso2.carbon.user.api.UserStoreException",
      "com.google.common.collect.Multiset",
      "org.wso2.carbon.um.ws.api.stub.GetUserClaimValueResponse",
      "com.ctc.wstx.io.InputBootstrapper",
      "org.wso2.carbon.user.core.claim.builder.ClaimBuilder",
      "org.apache.axis2.description.ParameterInclude",
      "org.apache.commons.ssl.asn1.BERNull",
      "com.google.common.hash.BloomFilter$SerialForm",
      "org.apache.axis2.wsdl.WSDLConstants",
      "org.apache.axiom.soap.SOAPMessage",
      "org.wso2.carbon.um.ws.api.stub.GetTenantIdResponse",
      "org.codehaus.stax2.XMLInputFactory2",
      "com.ctc.wstx.exc.WstxException",
      "com.ctc.wstx.util.InternCache",
      "com.ctc.wstx.compat.Jdk13Impl",
      "com.google.common.collect.FilteredEntryMultimap$AsMap",
      "org.apache.axis2.util.OnDemandLogger",
      "com.ctc.wstx.util.EmptyNamespaceContext",
      "com.google.common.base.CharMatcher$Negated",
      "org.apache.axiom.om.impl.llom.OMNodeImpl",
      "org.apache.commons.ssl.asn1.DERGeneralizedTime",
      "com.google.common.hash.BloomFilter",
      "com.google.common.hash.Funnels$IntegerFunnel",
      "org.apache.axiom.om.OMXMLParserWrapper",
      "eu.supersede.integration.federation.SupersedeFederation",
      "org.wso2.carbon.user.core.UserStoreException",
      "com.google.common.collect.Ordering",
      "org.apache.axiom.om.util.StAXUtils$7",
      "org.apache.axiom.om.util.StAXUtils$9",
      "org.wso2.carbon.user.core.util.JDBCRealmUtil",
      "com.google.common.base.CharMatcher$Digit",
      "org.wso2.carbon.um.ws.api.stub.IsReadOnly",
      "org.apache.axiom.om.impl.builder.StAXOMBuilder",
      "org.apache.commons.ssl.asn1.DERNumericString",
      "org.apache.axiom.util.stax.wrapper.WrappingXMLOutputFactory",
      "org.springframework.util.Assert",
      "org.apache.axiom.om.util.StAXUtils$2",
      "org.apache.axiom.om.impl.llom.OMCommentImpl",
      "org.apache.commons.ssl.asn1.ASN1TaggedObjectParser",
      "org.wso2.carbon.user.core.profile.builder.ProfileConfigurationBuilder",
      "org.apache.axis2.context.ServiceGroupContext",
      "org.wso2.carbon.um.ws.api.stub.ListUsersResponse",
      "org.wso2.carbon.user.core.jdbc.JDBCRoleContext",
      "com.google.common.collect.BoundType$2",
      "com.google.common.collect.BoundType$1",
      "org.apache.axiom.soap.SOAPFault",
      "org.apache.commons.ssl.asn1.DERVisibleString",
      "org.apache.commons.ssl.asn1.BERSequence",
      "org.wso2.carbon.um.ws.api.stub.GetUserListResponse",
      "org.apache.axiom.soap.SOAPFaultRole",
      "org.wso2.carbon.user.core.common.UserRolesCache",
      "com.google.common.base.CharMatcher$JavaDigit",
      "eu.supersede.integration.api.datastore.integration.types.SupersedePlatform",
      "org.wso2.carbon.user.api.Properties",
      "org.wso2.carbon.um.ws.api.stub.RemoteUserStoreManagerServiceUserStoreException",
      "org.wso2.carbon.context.internal.CarbonContextDataHolder",
      "org.apache.axis2.deployment.DeploymentConstants",
      "com.ctc.wstx.util.DataUtil",
      "org.apache.ws.commons.schema.XmlSchemaAnnotated",
      "com.ctc.wstx.util.BaseNsContext",
      "com.google.common.base.CharMatcher$InRange",
      "com.google.common.base.CharMatcher$JavaLetter",
      "com.google.common.base.CharMatcher$IsNot",
      "org.apache.axiom.om.impl.llom.factory.OMLinkedListMetaFactory",
      "com.google.common.base.CharMatcher$NegatedFastMatcher",
      "com.ctc.wstx.io.UTF32Reader",
      "com.google.common.cache.AbstractCache",
      "com.google.common.collect.Range",
      "org.wso2.carbon.um.ws.api.stub.GetTenantIdofUser",
      "com.ctc.wstx.io.ReaderBootstrapper",
      "org.apache.axis2.databinding.DataBindException",
      "org.apache.axis2.databinding.ADBException",
      "org.apache.axiom.soap.SOAPHeaderBlock",
      "org.wso2.carbon.user.api.Tenant",
      "com.google.common.base.CharMatcher$IsEither",
      "org.apache.commons.ssl.SSLServerSocketWrapper",
      "org.apache.axis2.util.XMLUtils",
      "org.apache.commons.ssl.asn1.ASN1InputStream$1",
      "org.apache.axis2.description.AxisOperation",
      "org.wso2.carbon.user.api.ProfileConfiguration",
      "com.google.common.cache.CacheStats",
      "org.wso2.carbon.user.core.ldap.ReadOnlyLDAPUserStoreManager",
      "com.google.common.base.CharMatcher$Any",
      "org.wso2.carbon.user.core.tenant.Tenant",
      "org.apache.axiom.om.impl.builder.DataHandlerReaderUtils",
      "org.apache.axis2.client.async.AxisCallback",
      "org.apache.axiom.om.impl.builder.StAXBuilder",
      "org.wso2.carbon.um.ws.api.stub.DeleteUser",
      "org.apache.axiom.om.OMContainer",
      "org.apache.axiom.util.blob.Blob",
      "org.apache.axiom.util.blob.WritableBlob",
      "org.wso2.carbon.user.core.util.UserCoreUtil",
      "com.google.common.hash.PrimitiveSink",
      "org.codehaus.stax2.validation.DTDValidationSchema",
      "com.google.common.base.Functions$IdentityFunction",
      "org.apache.axis2.util.TargetResolver",
      "org.apache.axiom.om.impl.OMNodeEx",
      "com.google.common.collect.FluentIterable$FromIterableFunction",
      "org.apache.axiom.om.OMSourcedElement",
      "org.apache.commons.logging.impl.SLF4JLocationAwareLog",
      "org.codehaus.stax2.XMLStreamProperties",
      "com.google.common.base.CharMatcher$And",
      "org.wso2.carbon.user.core.profile.dao.ProfileConfigDAO",
      "org.apache.commons.httpclient.protocol.ProtocolSocketFactory",
      "org.apache.commons.ssl.asn1.DERSequence",
      "org.wso2.carbon.user.core.listener.UserStoreManagerConfigurationListener",
      "com.google.common.hash.BloomFilter$1",
      "org.apache.ws.commons.schema.XmlSchemaObject",
      "org.apache.neethi.PolicyComponent",
      "org.apache.axiom.util.UIDGenerator",
      "com.google.common.base.Functions$SupplierFunction",
      "org.apache.axis2.description.DescriptionConstants",
      "com.google.common.collect.Maps$EntryFunction",
      "org.wso2.carbon.um.ws.api.stub.GetAllProfileNamesResponse",
      "org.apache.axis2.engine.MessageReceiver",
      "org.wso2.carbon.user.core.hybrid.HybridRoleManager",
      "com.ctc.wstx.io.MergedStream",
      "com.google.common.base.Functions$PredicateFunction",
      "org.apache.axis2.engine.Handler",
      "org.wso2.carbon.um.ws.api.stub.IsReadOnlyResponse",
      "org.wso2.carbon.um.ws.api.stub.GetProperties",
      "com.ctc.wstx.api.WstxInputProperties$ParsingMode",
      "com.google.common.base.Predicates$ContainsPatternFromStringPredicate",
      "com.google.common.base.SmallCharMatcher",
      "com.google.common.base.CharMatcher$RangesMatcher",
      "com.google.common.base.Converter",
      "com.google.common.base.Predicates$AndPredicate",
      "org.wso2.carbon.um.ws.api.stub.GetUserClaimValuesForClaimsResponse",
      "com.google.common.base.Function",
      "org.apache.axiom.om.OMNode",
      "com.google.common.base.CharMatcher$BreakingWhitespace",
      "com.ctc.wstx.sr.AttributeCollector",
      "com.google.common.collect.ImmutableMap",
      "org.wso2.carbon.um.ws.api.stub.GetPropertiesResponse",
      "org.apache.axiom.om.impl.llom.OMElementImpl",
      "org.apache.axis2.context.OperationContext",
      "com.ctc.wstx.io.ISOLatinReader",
      "com.google.common.base.Predicates$NotPredicate",
      "com.google.common.base.Suppliers$SupplierFunction",
      "org.apache.axis2.client.ServiceClient",
      "com.google.common.base.CharMatcher$JavaLowerCase",
      "org.apache.commons.ssl.asn1.DERInteger",
      "com.ctc.wstx.cfg.InputConfigFlags",
      "org.apache.commons.ssl.asn1.DefiniteLengthInputStream",
      "com.ctc.wstx.io.BaseInputSource",
      "org.apache.commons.ssl.asn1.DERUTF8String",
      "com.google.common.collect.AbstractMultiset",
      "org.wso2.carbon.user.api.Property",
      "org.wso2.carbon.user.core.claim.dao.ClaimDAO",
      "org.springframework.beans.factory.InitializingBean",
      "org.apache.axis2.engine.AxisConfiguration$1",
      "org.apache.commons.ssl.asn1.ASN1OctetString",
      "com.google.common.cache.LocalCache$LocalLoadingCache",
      "org.apache.axiom.soap.SOAPFaultText",
      "org.wso2.carbon.um.ws.api.stub.PermissionDTO",
      "com.ctc.wstx.sr.ReaderCreator",
      "org.apache.axis2.description.java2wsdl.DefaultSchemaGenerator",
      "org.apache.axis2.description.ParameterIncludeImpl",
      "org.apache.axiom.om.OMElement",
      "com.google.common.hash.Funnels$SequentialFunnel",
      "org.apache.axis2.description.TwoChannelAxisOperation",
      "org.wso2.carbon.user.core.common.DefaultRealm",
      "org.apache.axiom.ext.io.ReadFromSupport",
      "org.apache.axis2.engine.DefaultObjectSupplier",
      "org.wso2.carbon.um.ws.api.stub.GetUserListOfRoleResponse",
      "com.google.common.primitives.Doubles$DoubleConverter",
      "com.ctc.wstx.stax.WstxInputFactory",
      "org.wso2.carbon.um.ws.api.stub.UpdateRoleListOfUser",
      "org.apache.commons.logging.impl.SLF4JLogFactory",
      "org.apache.commons.ssl.Java14TrustManagerWrapper",
      "org.apache.axiom.util.UIDGenerator$1",
      "org.wso2.carbon.um.ws.api.stub.SetUserClaimValues",
      "com.google.common.base.CaseFormat$StringConverter",
      "org.apache.commons.ssl.asn1.ASN1InputStream",
      "org.apache.axiom.om.OMException",
      "org.apache.axiom.soap.SOAPVersion",
      "org.apache.axiom.om.impl.traverse.OMFilterIterator",
      "org.apache.axiom.soap.SOAPFaultReason",
      "com.ctc.wstx.compat.QNameCreator$Helper",
      "org.apache.axiom.om.OMFactory",
      "com.google.common.base.Functions$ForMapWithDefault",
      "org.wso2.carbon.um.ws.api.stub.GetRoleNamesResponse",
      "com.google.common.base.Predicates$InPredicate",
      "org.apache.axis2.context.ConfigurationContextFactory",
      "org.apache.axis2.description.java2wsdl.SchemaGenerator",
      "org.wso2.carbon.um.ws.api.stub.SetUserClaimValue",
      "org.apache.commons.ssl.PKCS8Key$DecryptResult",
      "org.apache.commons.ssl.asn1.ASN1TaggedObject",
      "com.google.common.cache.AbstractLoadingCache",
      "com.google.common.base.CharMatcher$ForPredicate",
      "org.apache.commons.ssl.ProbablyBadPasswordException",
      "org.apache.axiom.om.impl.OMNamespaceImpl",
      "org.wso2.carbon.user.core.util.DatabaseUtil",
      "org.wso2.carbon.um.ws.api.stub.ClaimValue",
      "org.apache.commons.ssl.Util",
      "org.wso2.carbon.um.ws.api.stub.GetAllProfileNames",
      "org.wso2.carbon.um.ws.api.stub.GetUserClaimValue",
      "org.wso2.carbon.user.core.ldap.ActiveDirectoryUserStoreConstants",
      "com.ctc.wstx.compat.JdkImpl",
      "org.apache.axis2.util.Counter",
      "org.apache.axis2.deployment.util.PhasesInfo",
      "com.ctc.wstx.io.InputSourceFactory",
      "com.google.common.base.CharMatcher$JavaLetterOrDigit",
      "com.google.common.base.Functions$FunctionForMapNoDefault",
      "org.springframework.boot.jta.bitronix.PoolingDataSourceBean$DirectXADataSource",
      "com.google.common.base.Converter$IdentityConverter",
      "org.codehaus.stax2.AttributeInfo",
      "org.apache.axis2.description.AxisService",
      "com.google.common.cache.ForwardingLoadingCache",
      "org.wso2.carbon.um.ws.api.stub.DeleteRole",
      "com.google.common.base.Predicate",
      "org.apache.commons.ssl.asn1.DEREnumerated",
      "org.apache.axis2.context.MessageContext",
      "com.google.common.collect.FilteredEntryMultimap$ValuePredicate",
      "org.apache.commons.ssl.asn1.DEROctetString",
      "org.wso2.carbon.user.api.UserRealm",
      "org.wso2.carbon.um.ws.api.stub.GetUserList",
      "com.google.common.base.Predicates$InstanceOfPredicate",
      "com.google.common.collect.DiscreteDomain$BigIntegerDomain",
      "org.wso2.carbon.um.ws.api.stub.RemoteUserStoreManagerServiceCallbackHandler",
      "org.apache.commons.ssl.asn1.DERUniversalString",
      "org.apache.axiom.soap.SOAPHeader",
      "org.apache.commons.ssl.asn1.DERTaggedObject",
      "com.ctc.wstx.util.EmptyIterator",
      "org.wso2.carbon.um.ws.api.stub.DeleteUserClaimValues",
      "org.apache.axis2.description.AxisService$1",
      "com.ctc.wstx.sr.NsInputElementStack",
      "com.google.common.cache.LocalCache",
      "org.apache.commons.ssl.SSLSocketWrapper",
      "com.google.common.io.PatternFilenameFilter",
      "org.apache.axis2.description.OutInAxisOperation",
      "org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory",
      "org.wso2.carbon.user.api.UserStoreManager",
      "org.wso2.carbon.context.internal.OSGiDataHolder",
      "com.google.common.collect.Maps$BiMapConverter",
      "com.google.common.base.CharMatcher",
      "com.google.common.collect.Multimaps$Keys",
      "org.apache.commons.ssl.PKCS8Key",
      "org.apache.commons.ssl.ProbablyNotPKCS8Exception",
      "com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache",
      "org.wso2.carbon.um.ws.api.stub.GetUserClaimValuesResponse",
      "org.apache.commons.ssl.asn1.DERBitString",
      "org.apache.axiom.om.OMMetaFactory",
      "org.wso2.carbon.user.api.ClaimMapping",
      "org.apache.axis2.description.OutInAxisOperationClient",
      "org.codehaus.stax2.validation.XMLValidator",
      "com.ctc.wstx.sr.NsAttributeCollector",
      "org.apache.axis2.databinding.ADBBean",
      "com.google.common.base.Predicates$CompositionPredicate",
      "com.google.common.base.Preconditions",
      "com.google.common.base.Predicates$OrPredicate",
      "org.apache.axiom.ext.stax.datahandler.DataHandlerProvider",
      "org.apache.axiom.util.stax.dialect.AbstractStAXDialect",
      "org.apache.commons.ssl.Java13",
      "com.google.common.base.CharMatcher$JavaIsoControl",
      "org.apache.commons.ssl.Java14",
      "org.apache.commons.ssl.asn1.BERConstructedOctetString",
      "org.apache.commons.ssl.asn1.DERObjectIdentifier",
      "org.apache.axiom.soap.SOAPFaultCode",
      "org.apache.axiom.om.OMProcessingInstruction",
      "org.apache.axiom.om.OMDocument",
      "org.wso2.carbon.um.ws.api.stub.AuthenticateResponse",
      "org.apache.axiom.util.stax.dialect.WoodstoxOutputFactoryWrapper",
      "org.wso2.carbon.um.ws.api.stub.GetProfileNames",
      "org.apache.axiom.soap.SOAPFaultNode",
      "org.wso2.carbon.um.ws.api.stub.GetPasswordExpirationTimeResponse",
      "org.wso2.carbon.user.core.claim.Claim",
      "org.apache.commons.ssl.ASN1Util",
      "org.apache.commons.ssl.asn1.DERUnknownTag",
      "org.apache.axiom.util.blob.BlobOutputStream",
      "org.apache.axiom.om.impl.llom.OMAttributeImpl",
      "org.apache.commons.ssl.HostnameVerifier$AbstractVerifier",
      "com.google.common.base.Equivalence$EquivalentToPredicate",
      "org.wso2.carbon.user.core.common.RoleContext",
      "org.apache.commons.ssl.TrustMaterial",
      "org.apache.commons.ssl.asn1.DERIA5String",
      "org.apache.commons.ssl.asn1.DERApplicationSpecific",
      "com.google.common.base.CharMatcher$SingleWidth",
      "org.apache.commons.logging.impl.SLF4JLog",
      "org.apache.axis2.description.OutOnlyAxisOperation",
      "org.apache.axiom.om.impl.util.EmptyIterator",
      "org.apache.axiom.om.OMComment",
      "org.wso2.carbon.user.core.profile.ProfileConfigurationManager",
      "org.apache.commons.ssl.asn1.ASN1OctetStringParser",
      "org.apache.axiom.om.OMText",
      "com.google.common.collect.AbstractMultimap",
      "org.wso2.carbon.um.ws.api.stub.Authenticate",
      "org.springframework.beans.factory.Aware",
      "org.apache.axis2.context.AbstractContext",
      "com.ctc.wstx.sr.InputElementStack",
      "eu.supersede.integration.api.security.IFUserStoreManager",
      "com.google.common.collect.Interners$InternerFunction",
      "org.apache.commons.ssl.PEMUtil",
      "eu.supersede.integration.properties.IntegrationProperty",
      "com.google.common.util.concurrent.UncheckedExecutionException",
      "com.ctc.wstx.util.TextBuffer$BufferReader",
      "com.google.common.collect.Range$RangeLexOrdering",
      "org.wso2.carbon.um.ws.api.stub.IsExistingUserResponse",
      "org.apache.ws.commons.schema.XmlSchema",
      "com.ctc.wstx.compat.Jdk14Impl$LimitMap",
      "org.apache.axiom.ext.stax.datahandler.DataHandlerReader",
      "org.springframework.beans.factory.BeanNameAware",
      "org.wso2.carbon.user.core.jdbc.JDBCUserStoreManager",
      "org.apache.axis2.util.JavaUtils",
      "org.apache.axis2.description.PolicySubject",
      "com.ctc.wstx.api.CommonConfig",
      "org.apache.commons.ssl.Certificates$SerializableComparator",
      "com.google.common.base.CharMatcher$Ascii",
      "org.wso2.carbon.um.ws.api.stub.RemoteUserStoreManagerServiceStub",
      "com.google.common.base.Converter$FunctionBasedConverter",
      "org.apache.commons.ssl.asn1.LimitedInputStream",
      "org.apache.commons.ssl.asn1.DERBMPString",
      "org.wso2.carbon.context.CarbonContext",
      "com.google.common.cache.Cache",
      "com.ctc.wstx.util.TextBuffer",
      "org.wso2.carbon.user.core.common.AbstractUserStoreManager",
      "com.google.common.cache.LoadingCache",
      "org.wso2.carbon.um.ws.api.stub.GetRoleListOfUser",
      "org.apache.commons.ssl.asn1.DERPrintableString",
      "com.ctc.wstx.sr.ValidatingStreamReader",
      "org.apache.axiom.om.impl.traverse.OMChildrenLegacyQNameIterator",
      "org.apache.axis2.engine.AxisConfiguration",
      "com.google.common.base.CharMatcher$Whitespace",
      "org.apache.axiom.soap.SOAPFaultSubCode",
      "org.wso2.carbon.user.core.claim.ClaimManager",
      "com.google.common.base.Suppliers$SupplierFunctionImpl",
      "com.ctc.wstx.api.ReaderConfig",
      "com.ctc.wstx.cfg.ParsingErrorMsgs",
      "com.ctc.wstx.sr.NsDefaultProvider",
      "org.wso2.carbon.user.core.UserRealm",
      "com.google.common.base.Predicates$ObjectPredicate",
      "org.apache.axiom.util.stax.dialect.WoodstoxStreamReaderWrapper",
      "org.apache.commons.ssl.asn1.DEREncodable",
      "org.codehaus.stax2.DTDInfo",
      "org.wso2.carbon.um.ws.api.stub.IsExistingRole",
      "com.google.common.base.Predicates$SubtypeOfPredicate",
      "org.apache.axiom.util.stax.wrapper.WrappingXMLInputFactory",
      "org.apache.axiom.om.util.StAXParserConfiguration$3",
      "com.ctc.wstx.io.StreamBootstrapper",
      "org.apache.axiom.om.util.StAXParserConfiguration$4",
      "org.apache.axiom.om.util.StAXParserConfiguration$1",
      "org.apache.axiom.util.stax.TextFromElementReader",
      "org.apache.axiom.om.util.StAXParserConfiguration$2",
      "org.apache.axis2.engine.AxisError",
      "org.wso2.carbon.um.ws.api.stub.ClaimDTO",
      "org.apache.axis2.description.RobustOutOnlyAxisOperation$RobustOutOnlyOperationClient",
      "org.codehaus.stax2.validation.ValidationContext",
      "org.wso2.carbon.um.ws.api.stub.GetHybridRoles",
      "org.apache.commons.ssl.HostnameVerifier",
      "org.apache.axis2.deployment.DeploymentClassLoader",
      "org.apache.commons.ssl.asn1.BERTaggedObject",
      "org.apache.axis2.description.AxisMessage",
      "org.apache.axiom.om.util.StAXParserConfiguration$5",
      "org.apache.axiom.om.util.StAXParserConfiguration",
      "org.codehaus.stax2.validation.XMLValidationSchema",
      "org.apache.commons.ssl.asn1.DERString",
      "org.apache.axis2.builder.Builder",
      "org.wso2.carbon.user.core.UserStoreManager",
      "com.google.common.hash.Funnel",
      "org.apache.commons.ssl.asn1.DERTags",
      "org.apache.axis2.client.FaultMapKey",
      "org.apache.axis2.util.Loader",
      "org.springframework.boot.jta.narayana.NarayanaDataSourceBean",
      "com.google.common.collect.FilteredMultimap",
      "org.wso2.carbon.user.core.profile.DefaultProfileConfigurationManager",
      "com.ctc.wstx.io.WstxInputSource",
      "org.wso2.carbon.user.core.ldap.ActiveDirectoryUserStoreManager",
      "org.apache.axiom.om.impl.builder.XOPBuilder",
      "org.apache.ws.commons.schema.resolver.URIResolver",
      "org.apache.axiom.om.OMSerializable",
      "com.ctc.wstx.sr.BasicStreamReader",
      "com.ctc.wstx.compat.JdkFeatures",
      "org.apache.axiom.soap.impl.llom.soap12.SOAP12Factory",
      "com.google.common.hash.Funnels$UnencodedCharsFunnel",
      "org.apache.axiom.soap.SOAPEnvelope",
      "org.wso2.carbon.um.ws.api.stub.AddRole",
      "org.apache.commons.ssl.asn1.ASN1Encodable",
      "org.apache.axis2.client.OperationClient",
      "com.google.common.base.Predicates",
      "org.wso2.carbon.um.ws.api.stub.GetUserListOfRole",
      "org.wso2.carbon.user.core.ldap.LDAPConnectionContext",
      "org.wso2.carbon.um.ws.api.stub.AddUserClaimValue",
      "org.wso2.carbon.user.api.RealmConfiguration",
      "org.wso2.carbon.user.api.Claim",
      "com.ctc.wstx.io.BranchingReaderSource",
      "org.apache.commons.ssl.asn1.BERSet",
      "org.apache.commons.httpclient.contrib.ssl.EasySSLProtocolSocketFactory",
      "com.ctc.wstx.compat.Jdk14Impl",
      "org.apache.axiom.om.OMHierarchyException",
      "org.wso2.carbon.um.ws.api.stub.RemoteUserStoreManagerServiceUserStoreExceptionException",
      "org.apache.commons.ssl.SSLClient",
      "org.wso2.carbon.user.core.ldap.LDAPRoleContext",
      "com.google.common.base.CharMatcher$AnyOf",
      "com.ctc.wstx.exc.WstxUnexpectedCharException",
      "org.codehaus.stax2.LocationInfo",
      "org.wso2.carbon.um.ws.api.stub.AddUser",
      "com.google.common.collect.FilteredEntryMultimap",
      "com.ctc.wstx.compat.JdkInfo",
      "org.codehaus.stax2.XMLStreamReader2",
      "org.wso2.carbon.um.ws.api.stub.AddUserClaimValues",
      "org.apache.axiom.om.impl.AbstractOMMetaFactory",
      "org.apache.axiom.util.stax.dialect.NormalizingXMLInputFactoryWrapper",
      "com.google.common.primitives.Floats$FloatConverter",
      "org.apache.axis2.description.RobustOutOnlyAxisOperation",
      "org.apache.axis2.deployment.FileSystemConfigurator",
      "org.wso2.carbon.user.core.config.RealmConfigXMLProcessor",
      "org.apache.axiom.om.OMXMLBuilderFactory",
      "com.google.common.hash.Funnels$LongFunnel",
      "org.apache.commons.ssl.asn1.DERSet",
      "com.ctc.wstx.sr.StreamReaderImpl",
      "com.ctc.wstx.util.TextBuilder",
      "org.apache.axiom.om.impl.llom.OMDocumentImpl",
      "org.apache.commons.ssl.HostnameVerifier$5",
      "com.ctc.wstx.io.ReaderSource",
      "org.apache.commons.ssl.asn1.ASN1Null",
      "org.apache.commons.ssl.asn1.DERBoolean",
      "org.apache.commons.ssl.HostnameVerifier$3",
      "org.apache.commons.ssl.HostnameVerifier$4",
      "org.apache.commons.ssl.HostnameVerifier$1",
      "com.google.common.primitives.Ints$IntConverter",
      "org.apache.commons.ssl.HostnameVerifier$2",
      "org.wso2.carbon.user.api.ClaimManager",
      "org.wso2.carbon.CarbonException",
      "org.wso2.carbon.user.api.ProfileConfigurationManager",
      "org.wso2.carbon.user.core.profile.ProfileConfiguration",
      "com.google.common.collect.BoundType",
      "com.google.common.collect.Maps$ViewCachingAbstractMap",
      "org.apache.axiom.util.stax.dialect.WoodstoxDialect",
      "org.apache.axis2.dataretrieval.AxisDataLocator",
      "org.apache.axiom.soap.SOAPFaultDetail",
      "org.apache.axiom.om.impl.llom.OMSerializableImpl",
      "org.apache.commons.ssl.asn1.DERT61String",
      "org.wso2.carbon.user.core.common.UserStore",
      "org.wso2.carbon.user.api.Permission",
      "org.apache.axiom.soap.SOAPBody",
      "com.ctc.wstx.compat.QNameCreator",
      "com.google.common.collect.ForwardingObject",
      "org.apache.axiom.om.impl.OMContainerEx",
      "org.wso2.carbon.um.ws.api.stub.DeleteUserClaimValue",
      "org.wso2.carbon.um.ws.api.stub.GetRoleNames",
      "com.google.common.io.BaseEncoding$Alphabet",
      "org.wso2.carbon.um.ws.api.stub.UpdateCredential",
      "org.apache.axiom.util.stax.dialect.NormalizingXMLOutputFactoryWrapper",
      "com.google.common.cache.LocalCache$LoadingSerializationProxy",
      "org.apache.axis2.util.Loader$1",
      "com.google.common.reflect.TypeToken$TypeFilter",
      "com.google.common.collect.Multimap",
      "org.apache.axiom.soap.SOAPFactory",
      "org.apache.axiom.soap.impl.llom.soap11.SOAP11Factory",
      "org.apache.commons.ssl.asn1.ASN1Set",
      "org.apache.axiom.util.stax.dialect.StAXDialect",
      "org.apache.commons.ssl.asn1.DERGeneralString",
      "com.ctc.wstx.io.UTF8Reader",
      "org.apache.axis2.engine.ObjectSupplier",
      "com.ctc.wstx.exc.WstxValidationException",
      "org.codehaus.stax2.XMLStreamLocation2",
      "com.ctc.wstx.sr.NonNsInputElementStack",
      "com.ctc.wstx.sr.StreamScanner",
      "org.wso2.carbon.um.ws.api.stub.GetUserClaimValuesForClaims",
      "org.apache.commons.ssl.asn1.DERObject",
      "org.codehaus.stax2.validation.XMLValidationException",
      "org.wso2.carbon.user.core.ldap.ReadWriteLDAPUserStoreManager",
      "org.apache.axiom.util.stax.wrapper.XMLInputFactoryWrapper",
      "com.google.common.base.CharMatcher$Or",
      "org.apache.commons.ssl.SSLWrapperFactory",
      "org.wso2.carbon.um.ws.api.stub.GetTenantIdofUserResponse",
      "org.apache.ws.commons.schema.utils.NamespaceContextOwner",
      "org.wso2.carbon.um.ws.api.stub.GetTenantId",
      "org.codehaus.stax2.io.Stax2Source",
      "org.wso2.carbon.user.core.dto.RoleDTO",
      "org.wso2.carbon.user.core.util.JNDIUtil",
      "org.apache.axiom.ext.stax.DelegatingXMLStreamReader",
      "com.ctc.wstx.exc.WstxEOFException",
      "org.codehaus.stax2.validation.Validatable",
      "org.wso2.carbon.user.core.multiplecredentials.MultipleCredentialUserStoreManager",
      "org.springframework.util.StringUtils",
      "org.apache.axiom.om.impl.llom.OMTextImpl"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IFUserStoreManager_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "eu.supersede.integration.properties.IntegrationProperty",
      "org.apache.commons.ssl.SSL",
      "org.apache.commons.ssl.HostnameVerifier$AbstractVerifier",
      "org.apache.commons.ssl.HostnameVerifier",
      "org.apache.commons.ssl.SSLWrapperFactory",
      "org.apache.commons.ssl.Java14",
      "org.apache.commons.ssl.JavaImpl",
      "org.apache.commons.ssl.Util",
      "org.apache.commons.ssl.KeyStoreBuilder",
      "org.apache.commons.ssl.PKCS8Key",
      "org.apache.commons.ssl.PEMUtil",
      "org.apache.commons.ssl.ASN1Util",
      "org.apache.commons.ssl.asn1.ASN1Encodable",
      "org.apache.commons.ssl.asn1.ASN1InputStream",
      "org.apache.commons.ssl.TrustMaterial",
      "org.apache.commons.ssl.Certificates",
      "org.apache.commons.httpclient.protocol.Protocol",
      "eu.supersede.integration.api.security.IFUserStoreManager",
      "org.springframework.util.StringUtils",
      "org.wso2.carbon.um.ws.api.stub.RemoteUserStoreManagerServiceStub",
      "org.apache.commons.logging.impl.SLF4JLogFactory",
      "org.apache.commons.logging.impl.SLF4JLocationAwareLog",
      "org.apache.axis2.description.AxisDescription",
      "org.apache.axis2.description.AxisService",
      "org.apache.axiom.om.OMAbstractFactory",
      "org.apache.axis2.description.ParameterIncludeImpl",
      "org.apache.axis2.dataretrieval.LocatorType",
      "org.apache.axis2.description.AxisOperation",
      "org.apache.axis2.description.OutInAxisOperation",
      "org.apache.axis2.client.ServiceClient",
      "org.apache.axiom.util.UIDGenerator",
      "org.apache.axis2.util.JavaUtils",
      "org.apache.axis2.description.OutOnlyAxisOperation",
      "org.apache.axis2.client.Options",
      "org.apache.axis2.context.AbstractContext",
      "org.apache.axis2.context.MessageContext",
      "org.apache.axis2.context.ConfigurationContextFactory",
      "org.apache.axis2.deployment.DeploymentEngine",
      "org.apache.axis2.deployment.FileSystemConfigurator",
      "org.apache.axis2.util.Loader",
      "org.apache.axis2.engine.AxisConfiguration",
      "org.apache.axis2.deployment.DescriptionBuilder",
      "org.apache.axis2.deployment.AxisConfigBuilder",
      "org.apache.axis2.util.XMLUtils",
      "org.apache.axiom.om.util.StAXParserConfiguration",
      "org.apache.axiom.om.util.StAXUtils",
      "org.codehaus.stax2.XMLInputFactory2",
      "com.ctc.wstx.util.SymbolTable",
      "com.ctc.wstx.util.DefaultXmlSymbolTable",
      "com.ctc.wstx.stax.WstxInputFactory",
      "com.ctc.wstx.api.CommonConfig",
      "com.ctc.wstx.api.ReaderConfig",
      "com.ctc.wstx.api.WstxInputProperties",
      "org.apache.axiom.util.stax.dialect.StAXDialectDetector",
      "org.apache.axiom.util.stax.dialect.WoodstoxDialect",
      "com.ctc.wstx.io.InputBootstrapper",
      "com.ctc.wstx.io.StreamBootstrapper",
      "com.ctc.wstx.io.BaseReader",
      "com.ctc.wstx.io.WstxInputData",
      "com.ctc.wstx.sr.StreamScanner",
      "com.ctc.wstx.sr.BasicStreamReader",
      "com.ctc.wstx.sr.ValidatingStreamReader",
      "com.ctc.wstx.sr.InputElementStack",
      "com.ctc.wstx.util.InternCache",
      "com.ctc.wstx.sr.NsInputElementStack",
      "com.ctc.wstx.sr.AttributeCollector",
      "com.ctc.wstx.sr.NsAttributeCollector",
      "com.ctc.wstx.util.TextBuilder",
      "com.ctc.wstx.util.TextBuffer",
      "com.ctc.wstx.compat.JdkInfo",
      "com.ctc.wstx.compat.JdkFeatures",
      "org.apache.axiom.om.impl.builder.StAXBuilder",
      "org.apache.axiom.om.impl.builder.StAXOMBuilder",
      "org.apache.axiom.util.stax.XMLStreamReaderUtils",
      "org.apache.axiom.ext.stax.datahandler.DataHandlerReader",
      "org.apache.axiom.om.impl.llom.OMSerializableImpl",
      "org.apache.axiom.om.impl.llom.OMTextImpl",
      "com.ctc.wstx.compat.QNameCreator",
      "org.apache.axiom.om.impl.llom.OMElementImpl",
      "com.ctc.wstx.io.WstxInputLocation",
      "com.ctc.wstx.util.DataUtil",
      "org.wso2.carbon.user.core.common.AbstractUserStoreManager",
      "org.wso2.carbon.user.core.ldap.ReadOnlyLDAPUserStoreManager",
      "org.wso2.carbon.user.core.ldap.ReadWriteLDAPUserStoreManager",
      "org.wso2.carbon.user.core.ldap.ActiveDirectoryUserStoreManager",
      "org.wso2.carbon.user.core.common.DefaultRealm",
      "org.wso2.carbon.user.core.jdbc.JDBCUserStoreManager",
      "org.wso2.carbon.user.core.claim.builder.ClaimBuilder",
      "org.wso2.carbon.user.core.claim.dao.ClaimDAO",
      "org.wso2.carbon.user.core.claim.ClaimInvalidationCache",
      "org.wso2.carbon.user.core.util.UserCoreUtil",
      "org.wso2.carbon.user.core.config.RealmConfigXMLProcessor",
      "org.wso2.carbon.user.api.UserStoreException",
      "org.wso2.carbon.user.core.UserStoreException",
      "org.wso2.carbon.user.core.profile.dao.ProfileConfigDAO",
      "org.wso2.carbon.user.core.common.UserRolesCache",
      "org.wso2.carbon.user.core.util.JNDIUtil",
      "org.wso2.carbon.user.core.profile.builder.ProfileConfigurationBuilder",
      "org.wso2.carbon.user.core.ldap.ActiveDirectoryUserStoreConstants",
      "org.wso2.carbon.context.internal.OSGiDataHolder",
      "org.wso2.carbon.context.CarbonContext"
    );
  }
}
