/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Jun 13 14:48:43 CEST 2018
 */

package org.objectweb.proactive.core.body;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;

@EvoSuiteClassExclude
public class AbstractBody_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.objectweb.proactive.core.body.AbstractBody"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 


  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractBody_ESTest_scaffolding.class.getClassLoader() ,
      "org.objectweb.proactive.core.UniqueID",
      "org.objectweb.proactive.ActiveObjectCreationException",
      "org.objectweb.proactive.core.body.exceptions.BodyTerminatedRequestException",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "org.apache.log4j.or.ObjectRenderer",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.PropertyConfigurator",
      "org.objectweb.proactive.core.ProActiveRuntimeException",
      "org.objectweb.proactive.core.util.log.ProActiveLogger",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.ProvisionNode",
      "org.objectweb.proactive.core.body.AbstractUniversalBody",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.Logger",
      "org.objectweb.proactive.Body",
      "org.apache.log4j.Level",
      "org.apache.log4j.MDC",
      "org.apache.log4j.helpers.LogLog",
      "org.objectweb.proactive.core.body.exceptions.BodyTerminatedException",
      "org.apache.log4j.Category",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.spi.RootLogger",
      "org.objectweb.proactive.core.body.UniversalBody",
      "org.apache.log4j.spi.AppenderAttachable",
      "org.apache.log4j.helpers.ThreadLocalMap",
      "org.apache.log4j.spi.RepositorySelector",
      "org.apache.log4j.spi.RendererSupport",
      "org.objectweb.proactive.core.ProActiveException",
      "org.apache.log4j.Priority",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.spi.Configurator",
      "org.apache.log4j.spi.LoggerRepository",
      "org.objectweb.proactive.core.util.log.ProActiveLoggerFactory",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.helpers.OptionConverter",
      "org.objectweb.proactive.core.body.AbstractBody",
      "org.objectweb.proactive.core.body.LocalBodyStrategy",
      "org.objectweb.proactive.core.body.exceptions.BodyTerminatedReplyException"
    );
  } 
}
